name: Cross-Platform CI

on:
  push:
    branches:
      - '*dev'
      - '**/*dev'
      - 'dev*'
      - '**/dev*'
    paths:
      - 'src/**'
      - 'include/**'
      - 'examples/**'
      - 'tests/**'
      - '.github/workflows/**'

jobs:

  ubuntu-ci:
    name: Linux (Ubuntu / GCC)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y ninja-build g++ cmake

      - name: Configure (FastDebug)
        run: cmake -B build-fastdebug -DCMAKE_BUILD_TYPE=FastDebug -G Ninja

      - name: Build
        run: cmake --build build-fastdebug -v

      - name: Run tests
        run: ctest --test-dir build-fastdebug --output-on-failure

  macos-ci:
    name: Darwin (macOS / LLVM @ 20)
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies (LLVM@20 + CMake + Ninja)
        run: |
          brew install cmake ninja llvm@20
          brew link llvm@20 --force

      - name: Show compiler version
        run: |
          clang++ --version
          /opt/homebrew/opt/llvm@20/bin/clang++ --version

      - name: Configure (FastDebug with LLVM 20 + libc++)
        run: >
          cmake -B build-fastdebug
          -DCMAKE_BUILD_TYPE=FastDebug
          -G Ninja
          -DCMAKE_C_COMPILER=/opt/homebrew/opt/llvm@20/bin/clang
          -DCMAKE_CXX_COMPILER=/opt/homebrew/opt/llvm@20/bin/clang++
          -DCMAKE_CXX_FLAGS="-std=c++20 -stdlib=libc++"
          -DCMAKE_EXE_LINKER_FLAGS="-stdlib=libc++ -lc++abi"

      - name: Build
        run: cmake --build build-fastdebug -v

      - name: Run tests
        run: ctest --test-dir build-fastdebug --output-on-failure

  windows-ci:
    name: Windows (MSYS2 UCRT64 / MinGW-w64)
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Setup MSYS2 with GCC 13+
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-ninja
          msystem: UCRT64

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure (FastDebug)
        run: >
          cmake -B build-fastdebug
          -DCMAKE_BUILD_TYPE=FastDebug
          -G Ninja
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_CXX_COMPILER=g++

      - name: Build
        run: cmake --build build-fastdebug -v

      - name: Run tests
        run: ctest --test-dir build-fastdebug --output-on-failure
